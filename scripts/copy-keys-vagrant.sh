#!/bin/bash

# Script ƒë·ªÉ copy SSH keys qua Vagrant SSH
echo "üîë Copy SSH keys qua Vagrant SSH..."

# Ki·ªÉm tra SSH key c√≥ t·ªìn t·∫°i kh√¥ng
if [ ! -f ~/.ssh/ansible_key.pub ]; then
    echo "‚ùå SSH key kh√¥ng t·ªìn t·∫°i. Ch·∫°y scripts/setup-ssh-keys.sh tr∆∞·ªõc"
    exit 1
fi

# Copy key l√™n t·ª´ng VM
for i in {1..3}; do
    echo "üì§ Copy key l√™n node$i..."
    
    # T·∫°o th∆∞ m·ª•c .ssh trong VM
    vagrant ssh node$i -c "mkdir -p ~/.ssh && chmod 700 ~/.ssh"
    
    # Copy public key v√†o authorized_keys
    vagrant ssh node$i -c "echo '$(cat ~/.ssh/ansible_key.pub)' >> ~/.ssh/authorized_keys"
    
    # Set ƒë√∫ng permissions
    vagrant ssh node$i -c "chmod 600 ~/.ssh/authorized_keys"
    
    # Remove duplicate keys
    vagrant ssh node$i -c "sort ~/.ssh/authorized_keys | uniq > ~/.ssh/authorized_keys.tmp && mv ~/.ssh/authorized_keys.tmp ~/.ssh/authorized_keys"
    
    echo "‚úÖ Ho√†n th√†nh node$i"
done

echo ""
echo "üß™ Test k·∫øt n·ªëi SSH..."
for i in {1..3}; do
    echo "Test node$i (192.168.56.10$i)..."
    ssh -i ~/.ssh/ansible_key -o ConnectTimeout=5 -o StrictHostKeyChecking=no vagrant@192.168.56.10$i "echo 'SSH connection successful to node$i'"
done

echo ""
echo "‚úÖ Ho√†n th√†nh! B√¢y gi·ªù b·∫°n c√≥ th·ªÉ ch·∫°y:"
echo "ansible all -m ping" 